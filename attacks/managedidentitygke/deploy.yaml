apiVersion: v1
kind: Namespace
metadata:
  name: pacman
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pacman-workload-identity
  namespace: pacman
  annotations:
    iam.gke.io/gcp-service-account: "pacman-rancher@adls-046l8ixrg6rj4xuwfh5klxzq1.iam.gserviceaccount.com" 
spec:
  automountServiceAccountToken: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minimi
  namespace: pacman
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minimi
  template:
    metadata:
      labels:
        app: minimi
    spec:
      serviceAccountName: pacman-workload-identity
      containers:
      - name: minimi
        image: ghcr.io/austriandatalab/minimi-kv:0.0.1 #@Tobias: we need to use the GKE SDK for node and rebuild a new image
        command: ["sh", "-c"]
        args: ["node src/server.js & sleep 100"]
        imagePullPolicy: Always
        env:
        - name: KMS_PROJECT_ID
          value: "your-gcp-project-id" # Replace with your actual GCP project ID
        - name: KMS_LOCATION
          value: "us-central1" # Replace with your KMS location
        - name: KMS_KEY_RING
          value: "key-ring" # Replace with your KMS key ring name
        - name: KMS_KEY_NAME
          value: "crypto-key"
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: minimi
  namespace: pacman
  annotations:
    tailscale.com/expose: "true"
spec:
  selector:
    app: minimi
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080