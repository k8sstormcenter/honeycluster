apiVersion: v1
kind: Namespace
metadata:
  name: storm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lightening
  namespace: storm

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lightening-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces", "secrets", "serviceaccounts", "persistentvolumeclaims", "persistentvolumes"]
  verbs: ["get", "list", "create", "patch", "delete", "impersonate"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "create", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "create", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lightening-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lightening-cluster-role
subjects:
- kind: ServiceAccount
  name: lightening
  namespace: storm

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lightening
  namespace: storm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lightening
  template:
    metadata:
      labels:
        app: lightening
    spec:
      serviceAccountName: lightening  # Use the appropriate service account
      containers:
      - name: lightening
        image: entlein/lightening:0.0.2
        imagePullPolicy: Always
        volumeMounts:
        - name: check-script-volume
          mountPath: /config
        command: ["/bin/bash", "-c"]
        args: ["cp /config/check.sh /tmp/check.sh && chmod +x /tmp/check.sh && /tmp/check.sh"]
      volumes:
      - name: check-script-volume
        configMap:
          name: check-script

# kubectl create configmap check-script -n storm --from-file=check.sh