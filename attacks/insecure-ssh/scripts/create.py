from kubernetes import client, config

config.load_incluster_config()

v1 = client.CoreV1Api()
pv_metadata = client.V1ObjectMeta(name='my-volume-vol', labels={'type': 'local'})
pvc_metadata = client.V1ObjectMeta(name='my-claim-vol')
pod_metadata = client.V1ObjectMeta(name='my-pod')
hpvs = client.V1HostPathVolumeSource(path='/var/log')
pv_spec = client.V1PersistentVolumeSpec(storage_class_name='local-storage', capacity={'storage': '10Gi'}, access_modes=['ReadWriteOnce'], host_path=hpvs)
vol_resource = client.V1VolumeResourceRequirements(requests={'storage': '3Gi'})
pvc_spec = client.V1PersistentVolumeClaimSpec(storage_class_name='local-storage', access_modes=['ReadWriteOnce'], resources=vol_resource)
pvcsrc=client.V1PersistentVolumeClaimVolumeSource(claim_name='my-claim-vol')
vol1 = client.V1Volume(name='my-storage-vol', persistent_volume_claim=pvcsrc)
volmnt = client.V1VolumeMount(name='my-storage-vol', mount_path='/hostlogs')
container1 = client.V1Container(name='my-pod', image='ubuntu:latest', command=["sh", "-c", "sleep 1h"], volume_mounts=[volmnt])
pod_spec = client.V1PodSpec(containers=[container1], volumes=[vol1])
pv_body = client.V1PersistentVolume(metadata=pv_metadata, spec=pv_spec)
pvc_body = client.V1PersistentVolumeClaim(metadata=pvc_metadata, spec=pvc_spec)
pod_body = client.V1Pod(metadata=pod_metadata, spec=pod_spec, kind='Pod', api_version='v1')
pv = v1.create_persistent_volume(body=pv_body)
pvc = v1.create_namespaced_persistent_volume_claim(namespace='default', body=pvc_body)
pod = v1.create_namespaced_pod(namespace='default', body=pod_body)