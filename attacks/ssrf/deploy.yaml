apiVersion: v1
kind: Namespace
metadata:
  name: users
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-service
  namespace: users
  annotations:
    iam.gke.io/gcp-service-account: "user-service@${PROJECT_ID}.iam.gserviceaccount.com"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      serviceAccountName: user-service
      automountServiceAccountToken: true
      containers:
      - name: user-service
        image: ghcr.io/k8sstormcenter/user-service:0.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: PROJECT_ID
          value: "${PROJECT_ID}"
        - name: SESSION_SECRET_NAME
          value: "session-secret"
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: users
  annotations:
    tailscale.com/expose: "true"
spec:
  selector:
    app: user-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
--- 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: "${WHILTELIST_SOURCE_RANGE}"
    nginx.ingress.kubernetes.io/use-proxy-protocol: "true"
  name: user-service-ingress
  namespace: users
spec:
  ingressClassName: "nginx"
  tls:
  - secretName: www-secret-gcp
    hosts:
      - "${USER_SERVICE_DOMAIN}"
  rules:
  - host: "${USER_SERVICE_DOMAIN}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 80