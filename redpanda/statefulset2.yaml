apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: redpanda-src
    meta.helm.sh/release-namespace: redpanda
  creationTimestamp: "2024-05-08T09:10:27Z"
  generation: 13
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda-src
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.8.3
  name: redpanda-src
  namespace: redpanda
  resourceVersion: "150796130"
  uid: 3fa56324-b512-464a-b2e8-e528db85396c
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda-src
      app.kubernetes.io/name: redpanda
  serviceName: redpanda-src
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 64eb0ed24771c08fedaea8da5f7451150c798b0bb6a84095e1d1ebd12df82705
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda-src
        app.kubernetes.io/name: redpanda
        redpanda.com/poddisruptionbudget: redpanda-src
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda-src
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda-src.redpanda.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.1
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda-src.redpanda.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
          protocol: TCP
        - containerPort: 9645
          name: admin-default
          protocol: TCP
        - containerPort: 8082
          name: http
          protocol: TCP
        - containerPort: 8083
          name: http-default
          protocol: TCP
        - containerPort: 9093
          name: kafka
          protocol: TCP
        - containerPort: 9094
          name: kafka-default
          protocol: TCP
        - containerPort: 33145
          name: rpc
          protocol: TCP
        - containerPort: 8081
          name: schemaregistry
          protocol: TCP
        - containerPort: 8084
          name: schema-default
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 2560Mi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda-src.redpanda.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: redpanda-src
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.1
        imagePullPolicy: IfNotPresent
        name: config-watcher
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-src-config-watcher
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.1
        imagePullPolicy: IfNotPresent
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/redpanda
          name: redpanda-src
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.1
        imagePullPolicy: IfNotPresent
        name: redpanda-configurator
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: redpanda-src
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-src-configurator
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda-src
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-src-sts-lifecycle
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
      - configMap:
          defaultMode: 420
          name: redpanda-src
        name: redpanda-src
      - emptyDir: {}
        name: config
      - name: redpanda-src-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-src-configurator
      - name: redpanda-src-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-src-config-watcher
      - name: redpanda-src-fs-validator
        secret:
          defaultMode: 509
          secretName: redpanda-src-fs-validator
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda-src
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 0
  collisionCount: 0
  currentRevision: redpanda-src-699fbf6c54
  observedGeneration: 13
  replicas: 1
  updateRevision: redpanda-src-7d7b4f5777
  updatedReplicas: 1
