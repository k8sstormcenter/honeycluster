apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: pl-cloud
    component: cloud-deps
  name: nats
  namespace: plc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: pl-cloud
    component: cloud-deps
  name: nats-server
  namespace: plc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: pl-cloud
    component: cloud-deps
  name: plc:nats-server
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: pl-cloud
    component: cloud-deps
  name: plc:nats-server-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: plc:nats-server
subjects:
- kind: ServiceAccount
  name: nats-server
  namespace: plc
---
apiVersion: v1
data:
  nats.conf: |
    pid_file: "/var/run/nats/nats.pid"
    http: 8222

    tls {
      ca_file: "/etc/nats-server-tls-certs/ca.crt",
      cert_file: "/etc/nats-server-tls-certs/server.crt",
      key_file: "/etc/nats-server-tls-certs/server.key",
      timeout: 3
    }

    server_name: $POD_NAME
    jetstream {
      store_dir: /data/jetstream
    }

    cluster {
      name: pl-nats
      port: 6222
      routes [
        nats://pl-nats-0.pl-nats:6222
        nats://pl-nats-1.pl-nats:6222
        nats://pl-nats-2.pl-nats:6222
      ]

      tls {
        ca_file: "/etc/nats-server-tls-certs/ca.crt",
        cert_file: "/etc/nats-server-tls-certs/server.crt",
        key_file: "/etc/nats-server-tls-certs/server.key",
        timeout: 3
      }

      advertise: $CLUSTER_ADVERTISE
      connect_retries: 30
    }
kind: ConfigMap
metadata:
  labels:
    app: pl-cloud
    component: cloud-deps
  name: nats-config
  namespace: plc
---
apiVersion: v1
data:
  ANNOUNCE_WIDGET_URL: ""
  ANNOUNCEMENT_ENABLED: "false"
kind: ConfigMap
metadata:
  labels:
    app: pl-cloud
  name: pl-announcement-config
  namespace: plc
---
apiVersion: v1
data:
  PL_AUTH_CONNECTOR_CALLBACK_URL: ""
  PL_AUTH_CONNECTOR_NAME: ""
kind: ConfigMap
metadata:
  labels:
    app: pl-cloud
  name: pl-auth-connector-config
  namespace: plc
---
apiVersion: v1
data:
  PL_SENTRY_DSN: ""
kind: ConfigMap
metadata:
  labels:
    app: pl-cloud
  name: pl-errors-config
  namespace: plc
---
apiVersion: v1
data:
  PL_JETSTREAM_CLUSTER_SIZE: "3"
kind: ConfigMap
metadata:
  labels:
    app: pl-cloud
    component: cloud-deps
  name: pl-jetstream-config
  namespace: plc
---
apiVersion: v1
data:
  PL_LD_CLIENT_ID: ""
  PL_LD_SDK_KEY: ""
kind: ConfigMap
metadata:
  labels:
    app: pl-cloud
  name: pl-ld-config
  namespace: plc
---
apiVersion: v1
data:
  PL_AUTH_CLIENT_ID: auth-code-client
  PL_AUTH_EMAIL_PASSWORD_CONN: ""
  PL_AUTH_URI: /oauth/hydra
  PL_OAUTH_PROVIDER: hydra
kind: ConfigMap
metadata:
  labels:
    app: pl-cloud
  name: pl-oauth-config
  namespace: plc
---
apiVersion: v1
data:
  PL_DEV_SENTRY: ""
  PL_OPERATOR_SENTRY: ""
  PL_PROD_SENTRY: ""
kind: ConfigMap
metadata:
  labels:
    app: pl-cloud
  name: pl-sentry-dsn-config
  namespace: plc
---
apiVersion: v1
data:
  cli-write-key: ""
  ui-write-key: ""
  write-key: ""
kind: ConfigMap
metadata:
  labels:
    app: pl-cloud
  name: segment-config
  namespace: plc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pl-cloud
    component: cloud-deps
    name: pl-nats
  name: pl-nats
  namespace: plc
spec:
  clusterIP: None
  ports:
  - name: client
    port: 4222
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
  - name: metrics
    port: 7777
  - name: leafnodes
    port: 7422
  - name: gateways
    port: 7522
  publishNotReadyAddresses: true
  selector:
    app: pl-cloud
    component: cloud-deps
    name: pl-nats
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pl-cloud
  name: postgres
  namespace: plc
spec:
  ports:
  - port: 5432
  selector:
    app: pl-cloud
    name: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: pl-cloud
  name: postgres-pv-claim
  namespace: plc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pl-cloud
  name: postgres
  namespace: plc
spec:
  selector:
    matchLabels:
      app: pl-cloud
      name: postgres
  template:
    metadata:
      labels:
        app: pl-cloud
        name: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: pl
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: PL_POSTGRES_USERNAME
              name: pl-db-secrets
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PL_POSTGRES_PASSWORD
              name: pl-db-secrets
        image: postgres:14-alpine@sha256:446abaf8831c54f57212c0ae52f5df84e69eeb2767e2376d07bed9c9742b1243
        name: postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-pv-claim
          subPath: data
      volumes:
      - name: postgres-pv-claim
        persistentVolumeClaim:
          claimName: postgres-pv-claim
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: pl-cloud
    component: cloud-deps
    name: pl-nats
  name: pl-nats
  namespace: plc
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app: pl-cloud
      component: cloud-deps
      name: pl-nats
  serviceName: pl-nats
  template:
    metadata:
      labels:
        app: pl-cloud
        component: cloud-deps
        name: pl-nats
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - pl-nats
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - nats-server
        - --config
        - /etc/nats-config/nats.conf
        - -js
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_ADVERTISE
          value: $(POD_NAME).pl-nats.$(POD_NAMESPACE).svc
        image: gcr.io/pixie-oss/pixie-prod/vizier-deps/nats:2.9.19-scratch@sha256:5de59286eb54ead4d4a9279846098d4097b9c17a3c0588182398a7250cde1af9
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - /nats-server -sl=ldm=/var/run/nats/nats.pid && /bin/sleep 60
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz?js-enabled-only=true
            port: 8222
          periodSeconds: 30
          successThreshold: 1
        name: pl-nats
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 7422
          name: leafnodes
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        - containerPort: 7777
          name: metrics
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz?js-server-only=true
            port: 8222
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        startupProbe:
          failureThreshold: 90
          httpGet:
            path: /healthz
            port: 8222
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /etc/nats-config
          name: config-volume
        - mountPath: /etc/nats-server-tls-certs
          name: nats-server-tls-volume
        - mountPath: /var/run/nats
          name: pid
        - mountPath: /data/jetstream
          name: nats-sts-vol
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 60
      volumes:
      - name: nats-server-tls-volume
        secret:
          secretName: service-tls-certs
      - configMap:
          name: nats-config
        name: config-volume
      - emptyDir: {}
        name: pid
  volumeClaimTemplates:
  - metadata:
      labels:
        app: pl-cloud
        component: cloud-deps
      name: nats-sts-vol
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: pl-cloud
    component: cloud-deps
  name: pl-nats-pdb
  namespace: plc
spec:
  minAvailable: 51%
  selector:
    matchLabels:
      app: pl-cloud
      component: cloud-deps
      name: pl-nats
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  labels:
    app: pl-cloud
  name: pl-elastic
  namespace: plc
spec:
  image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1@sha256:f734909115be9dba66736c4b7356fd52da58b1ffdb895ba74cb5c2fca2b133dd
  nodeSets:
  - config:
      node.data: true
      node.ingest: true
      node.master: true
      node.store.allow_mmap: true
    count: 1
    name: master
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - SYS_CHROOT
              - SETUID
              drop:
              - ALL
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
        initContainers:
        - command:
          - sh
          - -c
          - sysctl -w vm.max_map_count=262144
          name: sysctl
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            seccompProfile:
              type: RuntimeDefault
        - name: elastic-internal-init-filesystem
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
        securityContext:
          seccompProfile:
            type: RuntimeDefault
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
  - config:
      node.attr.data: hot
      node.data: true
      node.ingest: true
      node.master: false
      node.store.allow_mmap: true
    count: 0
    name: data
    podTemplate:
      spec:
        containers:
        - env:
          - name: ES_JAVA_OPTS
            value: -Xms2g -Xmx2g -Dlog4j2.formatMsgNoLookups=True
          name: elasticsearch
          # resources:
          #   limits:
          #     cpu: 2
          #     memory: 2Gi
          #   requests:
          #     cpu: 0.5
          #     memory: 4Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - SYS_CHROOT
              - SETUID
              drop:
              - ALL
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
        initContainers:
        - command:
          - sh
          - -c
          - sysctl -w vm.max_map_count=262144
          name: sysctl
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            seccompProfile:
              type: RuntimeDefault
        - name: elastic-internal-init-filesystem
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
        securityContext:
          seccompProfile:
            type: RuntimeDefault
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
  version: 7.6.0
