tetragon:
  exportAllowList: |
    {"event_set":["PROCESS_KPROBE"]}
  #exportAllowList: |-
  #  {"event_set":["PROCESS_EXEC", "PROCESS_EXIT", "PROCESS_KPROBE", "PROCESS_UPROBE", "PROCESS_TRACEPOINT"]}
  # Denylist for JSON export. For example, to exclude exec events that look similar to
  # Kubernetes health checks and all the events from kube-system namespace and the host:
  #
  # exportDenyList: |
  #   {"health_check":true}
  #   {"namespace":["kube-system",""]}
  #
  exportDenyList: |-
    {"health_check":true}
    {"namespace":["", "storm","cert-manager","honey","cilium","kube-system","gmp-system", "pl","olm","px-operator"]}
  # Filters to include or exclude fields from Tetragon events. Without any filters, all
  # fields are included by default. The presence of at least one inclusion filter implies
  # default-exclude (i.e. any fields that don't match an inclusion filter will be
  # excluded). Field paths are expressed using dot notation like "a.b.c" and multiple
  # field paths can be separated by commas like "a.b.c,d,e.f". An optional "event_set" may
  # be specified to apply the field filter to a specific set of events.
  #
  # For example, to exclude the "parent" field from all events and include the "process"
  # field in PROCESS_KPROBE events while excluding all others:
  #
  # fieldFilters: |
  #   {"fields": "parent", "action": "EXCLUDE"}
  #   {"event_set": ["PROCESS_KPROBE"], "fields": "process", "action": "INCLUDE"}
  #
  fieldFilters: ""
  # Filters to redact secrets from string fields in Tetragon events.  To perform
  # redactions, redaction filters define regular expressions in the `redact`
  # field. Any capture groups in these regular expressions are redacted and
  # replaced with "*****".
  #
  # Redaction filters select events using the `match` field, which contains one